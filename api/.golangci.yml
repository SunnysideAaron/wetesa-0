# See E:\Working\wetesa-0\docs\Decision Records\Architecture\ADR-012 Linters
# [All settings](https://github.com/golangci/golangci-lint/blob/HEAD/.golangci.reference.yml)
#
# Other peoples opinions:
# [maratori Golden Config](https://gist.github.com/maratori/47a4d00457a92aa426dbd48a18776322)
# [Oleg Kovalov](https://olegk.dev/go-linters-configuration-the-right-version)

version: "2"

issues:
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 50

formatters:
  enable:
    - gci # reorders imports
    - goimports # adds missing imports and removes unreferenced imports, also formats code to gofmt rules
    - golines # checks if code is formatted, and fixes long lines, tries to use goimports first then gofmt

  ## disabled
    #- gofmt # default go formatter. only needed if goimports is not used
    #- gofumpt # [replaced by goimports] checks if code and import statements are formatted, with additional rules

  settings:
    gci:
      # Section configuration to compare against.
      # Section names are case-insensitive and may contain parameters in ().
      # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
      # If `custom-order` is `true`, it follows the order of `sections` option.
      # Default: ["standard", "default"]
      sections:
        - standard # Standard section: captures all standard packages.
        - default # Default section: contains all imports that could not be matched to another section type.
        - prefix(github.com/org/project) # Custom section: groups all imports with the specified Prefix.
        - blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
        - dot # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
        - alias # Alias section: contains all alias imports. This section is not present unless explicitly enabled.
        - localmodule # Local module section: contains all local packages. This section is not present unless explicitly enabled.

    golines:
      # Target maximum line length.
      # Default: 100
      max-len: 120
      
  exclusions:
    paths:
      # This file has long lines on purpose. It is easier to read that way.
      # Unfortunately no way to turn off just golines. Have to turn off all formatters. VS code should handle most of it.
      - internal/server/routes.go

linters:
  enable:
    - asasalint # checks for pass []any as any in variadic func(...any)
    # - asciicheck # checks that your code does not contain non-ASCII identifiers
    # - bidichk # checks for dangerous unicode character sequences
    # - bodyclose # checks whether HTTP response body is closed successfully
    # - canonicalheader # checks whether net/http.Header uses canonical header
    # - copyloopvar # detects places where loop variables are copied (Go 1.22+)
    # - cyclop # checks function and package cyclomatic complexity
    # - depguard # checks if package imports are in a list of acceptable packages
    # - dupl # tool for code clone detection
    # - durationcheck # checks for two durations multiplied together
    - errcheck # checking for unchecked errors, these unchecked errors can be critical bugs in some cases
    # - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
    # - errorlint # finds code that will cause problems with the error wrapping scheme introduced in Go 1.13
    # - exhaustive # checks exhaustiveness of enum switch statements
    # - exptostd # detects functions from golang.org/x/exp/ that can be replaced by std functions
    # - fatcontext # detects nested contexts in loops
    # - forbidigo # forbids identifiers
    # - funlen # tool for detection of long functions
    # - gocheckcompilerdirectives # validates go compiler directive comments (//go:)
    # - gochecknoglobals # checks that no global variables exist
    # - gochecknoinits # checks that no init functions are present in Go code
    # - gochecksumtype # checks exhaustiveness on Go "sum types"
    # - gocognit # computes and checks the cognitive complexity of functions
    # - goconst # finds repeated strings that could be replaced by a constant
    # - gocritic # provides diagnostics that check for bugs, performance and style issues
    # - gocyclo # computes and checks the cyclomatic complexity of functions
    # - godot # checks if comments end in a period
    # - gomoddirectives # manages the use of 'replace', 'retract', and 'excludes' directives in go.mod
    # - goprintffuncname # checks that printf-like functions are named with f at the end
    # - gosec # inspects source code for security problems
    - govet # reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    # - iface # checks the incorrect use of interfaces, helping developers avoid interface pollution
    - ineffassign # detects when assignments to existing variables are not used
    # - intrange # finds places where for loops could make use of an integer range
    # - loggercheck # checks key value pairs for common logger libraries (kitlog,klog,logr,zap)
    # - makezero # finds slice declarations with non-zero initial length
    # - mirror # reports wrong mirror patterns of bytes/strings usage
    # - mnd # detects magic numbers
    # - musttag # enforces field tags in (un)marshaled structs
    # - nakedret # finds naked returns in functions greater than a specified function length
    # - nestif # reports deeply nested if statements
    # - nilerr # finds the code that returns nil even if it checks that the error is not nil
    # - nilnesserr # reports that it checks for err != nil, but it returns a different nil value error (powered by nilness and nilerr)
    # - nilnil # checks that there is no simultaneous return of nil error and an invalid value
    # - noctx # finds sending http request without context.Context
    # - nolintlint # reports ill-formed or insufficient nolint directives
    # - nonamedreturns # reports all named returns
    # - nosprintfhostport # checks for misuse of Sprintf to construct a host with port in a URL
    # - perfsprint # checks that fmt.Sprintf can be replaced with a faster alternative
    # - predeclared # finds code that shadows one of Go's predeclared identifiers
    # - promlinter # checks Prometheus metrics naming via promlint
    # - protogetter # reports direct reads from proto message fields when getters should be used
    # - reassign # checks that package variables are not reassigned
    # - recvcheck # checks for receiver type consistency
    - revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint
    # - rowserrcheck # checks whether Err of rows is checked successfully
    # - sloglint # ensure consistent code style when using log/slog
    # - spancheck # checks for mistakes with OpenTelemetry/Census spans
    # - sqlclosecheck # checks that sql.Rows and sql.Stmt are closed
    - staticcheck # is a go vet on steroids, applying a ton of static analysis checks    
    # - testableexamples # checks if examples are testable (have an expected output)
    # - testifylint # checks usage of github.com/stretchr/testify
    # - testpackage # makes you use a separate _test package
    # - tparallel # detects inappropriate usage of t.Parallel() method in your Go test codes
    # - unconvert # removes unnecessary type conversions
    # - unparam # reports unused function parameters
    - unused # checks for unused constants, variables, functions and types
    # - usestdlibvars # detects the possibility to use variables/constants from the Go standard library
    # - usetesting # reports uses of functions with replacement inside the testing package
    # - wastedassign # finds wasted assignment statements
    # - whitespace # detects leading and trailing whitespace

    ## you may want to enable
    #- decorder # checks declaration order and count of types, constants, variables and functions
    #- exhaustruct # [highly recommend to enable] checks if all structure fields are initialized
    #- ginkgolinter # [if you use ginkgo/gomega] enforces standards of using ginkgo and gomega
    #- godox # detects usage of FIXME, TODO and other keywords inside comments
    #- goheader # checks is file header matches to pattern
    #- inamedparam # [great idea, but too strict, need to ignore a lot of cases by default] reports interfaces with unnamed method parameters
    #- interfacebloat # checks the number of methods inside an interface
    #- ireturn # accept interfaces, return concrete types
    #- prealloc # [premature optimization, but can be used in some cases] finds slice declarations that could potentially be preallocated
    #- tagalign # checks that struct tags are well aligned
    #- varnamelen # [great idea, but too many false positives] checks that the length of a variable's name matches its scope
    #- wrapcheck # checks that errors returned from external packages are wrapped
    #- zerologlint # detects the wrong usage of zerolog that a user forgets to dispatch zerolog.Event

    ## disabled
    #- containedctx # detects struct contained context.Context field
    #- contextcheck # [too many false positives] checks the function whether use a non-inherited context
    #- dogsled # checks assignments with too many blank identifiers (e.g. x, _, _, _, := f())
    #- dupword # [useless without config] checks for duplicate words in the source code
    #- err113 # [too strict] checks the errors handling expressions
    #- errchkjson # [don't see profit + I'm against of omitting errors like in the first example https://github.com/breml/errchkjson] checks types passed to the json encoding functions. Reports unsupported types and optionally reports occasions, where the check for the returned error can be omitted
    #- forcetypeassert # [replaced by errcheck] finds forced type assertions
    #- gomodguard # [use more powerful depguard] allow and block lists linter for direct Go module dependencies
    #- gosmopolitan # reports certain i18n/l10n anti-patterns in your Go codebase
    #- grouper # analyzes expression groups
    #- importas # enforces consistent import aliases
    #- lll # [replaced by golines] reports long lines
    #- maintidx # measures the maintainability index of each function
    #- misspell # [useless] finds commonly misspelled English words in comments
    #- nlreturn # [too strict and mostly code is not more readable] checks for a new line before return and branch statements to increase code clarity
    #- paralleltest # [too many false positives] detects missing usage of t.Parallel() method in your Go test
    #- tagliatelle # checks the struct tags
    #- thelper # detects golang test helpers without t.Helper() call and checks the consistency of test helpers
    #- wsl # [too strict and mostly code is not more readable] whitespace linter forces you to use empty lines

  # All settings can be found here https://github.com/golangci/golangci-lint/blob/HEAD/.golangci.reference.yml
  settings:
    # cyclop:
    #   # The maximal code complexity to report.
    #   # Default: 10
    #   max-complexity: 30
    #   # The maximal average package complexity.
    #   # If it's higher than 0.0 (float) the check is enabled
    #   # Default: 0.0
    #   package-average: 10.0

    # depguard:
    #   # Rules to apply.
    #   #
    #   # Variables:
    #   # - File Variables
    #   #   Use an exclamation mark `!` to negate a variable.
    #   #   Example: `!$test` matches any file that is not a go test file.
    #   #
    #   #   `$all` - matches all go files
    #   #   `$test` - matches all go test files
    #   #
    #   # - Package Variables
    #   #
    #   #   `$gostd` - matches all of go's standard library (Pulled from `GOROOT`)
    #   #
    #   # Default (applies if no custom rules are defined): Only allow $gostd in all files.
    #   rules:
    #     "deprecated":
    #       # List of file globs that will match this list of settings to compare against.
    #       # By default, if a path is relative, it is relative to the directory where the golangci-lint command is executed.
    #       # The placeholder '${base-path}' is substituted with a path relative to the mode defined with `run.relative-path-mode`.
    #       # Default: $all
    #       files:
    #         - "$all"
    #       # List of packages that are not allowed.
    #       # Entries can be a variable (starting with $), a string prefix, or an exact match (if ending with $).
    #       # Default: []
    #       deny:
    #         - pkg: github.com/golang/protobuf
    #           desc: Use google.golang.org/protobuf instead, see https://developers.google.com/protocol-buffers/docs/reference/go/faq#modules
    #         - pkg: github.com/satori/go.uuid
    #           desc: Use github.com/google/uuid instead, satori's package is not maintained
    #         - pkg: github.com/gofrs/uuid$
    #           desc: Use github.com/gofrs/uuid/v5 or later, it was not a go module before v5
    #     "non-test files":
    #       files:
    #         - "!$test"
    #       deny:
    #         - pkg: math/rand$
    #           desc: Use math/rand/v2 instead, see https://go.dev/blog/randv2
    #     "non-main files":
    #       files:
    #         - "!**/main.go"
    #       deny:
    #         - pkg: log$
    #           desc: Use log/slog instead, see https://go.dev/blog/slog

    errcheck:
      # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
      # Such cases aren't reported by default.
      # Default: false
      check-type-assertions: true

    # exhaustive:
    #   # Program elements to check for exhaustiveness.
    #   # Default: [ switch ]
    #   check:
    #     - switch
    #     - map

    # exhaustruct:
    #   # List of regular expressions to exclude struct packages and their names from checks.
    #   # Regular expressions must match complete canonical struct package/name/structname.
    #   # Default: []
    #   exclude:
    #     # std libs
    #     - ^net/http.Client$
    #     - ^net/http.Cookie$
    #     - ^net/http.Request$
    #     - ^net/http.Response$
    #     - ^net/http.Server$
    #     - ^net/http.Transport$
    #     - ^net/url.URL$
    #     - ^os/exec.Cmd$
    #     - ^reflect.StructField$
    #     # public libs
    #     - ^github.com/Shopify/sarama.Config$
    #     - ^github.com/Shopify/sarama.ProducerMessage$
    #     - ^github.com/mitchellh/mapstructure.DecoderConfig$
    #     - ^github.com/prometheus/client_golang/.+Opts$
    #     - ^github.com/spf13/cobra.Command$
    #     - ^github.com/spf13/cobra.CompletionOptions$
    #     - ^github.com/stretchr/testify/mock.Mock$
    #     - ^github.com/testcontainers/testcontainers-go.+Request$
    #     - ^github.com/testcontainers/testcontainers-go.FromDockerfile$
    #     - ^golang.org/x/tools/go/analysis.Analyzer$
    #     - ^google.golang.org/protobuf/.+Options$
    #     - ^gopkg.in/yaml.v3.Node$

    # funlen:
    #   # Checks the number of lines in a function.
    #   # If lower than 0, disable the check.
    #   # Default: 60
    #   lines: 100
    #   # Checks the number of statements in a function.
    #   # If lower than 0, disable the check.
    #   # Default: 40
    #   statements: 50

    # gochecksumtype:
    #   # Presence of `default` case in switch statements satisfies exhaustiveness, if all members are not listed.
    #   # Default: true
    #   default-signifies-exhaustive: false

    # gocognit:
    #   # Minimal code complexity to report.
    #   # Default: 30 (but we recommend 10-20)
    #   min-complexity: 20

    # gocritic:
    #   # Settings passed to gocritic.
    #   # The settings key is the name of a supported gocritic checker.
    #   # The list of supported checkers can be find in https://go-critic.github.io/overview.
    #   settings:
    #     captLocal:
    #       # Whether to restrict checker to params only.
    #       # Default: true
    #       paramsOnly: false
    #     underef:
    #       # Whether to skip (*x).method() calls where x is a pointer receiver.
    #       # Default: true
    #       skipRecvDeref: false

    govet:
      # Enable all analyzers.
      # Default: false
      enable-all: true
      # Disable analyzers by name.
      # Run `go tool vet help` to see all analyzers.
      # Default: []
      disable:
        - fieldalignment # too strict, I'm not going to have a weird column order for my db structs to save a few bytes unless it is necessary.
      # Settings per analyzer.
      settings:
        shadow:
          # Whether to be strict about shadowing; can be noisy.
          # Default: false
          strict: true

    # inamedparam:
    #   # Skips check for interface methods with only a single parameter.
    #   # Default: false
    #   skip-single-param: true

    # mnd:
    #   # List of function patterns to exclude from analysis.
    #   # Values always ignored: `time.Date`,
    #   # `strconv.FormatInt`, `strconv.FormatUint`, `strconv.FormatFloat`,
    #   # `strconv.ParseInt`, `strconv.ParseUint`, `strconv.ParseFloat`.
    #   # Default: []
    #   ignored-functions:
    #     - args.Error
    #     - flag.Arg
    #     - flag.Duration.*
    #     - flag.Float.*
    #     - flag.Int.*
    #     - flag.Uint.*
    #     - os.Chmod
    #     - os.Mkdir.*
    #     - os.OpenFile
    #     - os.WriteFile
    #     - prometheus.ExponentialBuckets.*
    #     - prometheus.LinearBuckets

    # nakedret:
    #   # Make an issue if func has more lines of code than this setting, and it has naked returns.
    #   # Default: 30
    #   max-func-lines: 0

    # nolintlint:
    #   # Exclude following linters from requiring an explanation.
    #   # Default: []
    #   allow-no-explanation: [ funlen, gocognit, golines ]
    #   # Enable to require an explanation of nonzero length after each nolint directive.
    #   # Default: false
    #   require-explanation: true
    #   # Enable to require nolint directives to mention the specific linter being suppressed.
    #   # Default: false
    #   require-specific: true

    # perfsprint:
    #   # Optimizes into strings concatenation.
    #   # Default: true
    #   strconcat: false



    # reassign:
    #   # Patterns for global variable names that are checked for reassignment.
    #   # See https://github.com/curioswitch/go-reassign#usage
    #   # Default: ["EOF", "Err.*"]
    #   patterns:
    #     - ".*"

    revive:
      # Maximum number of open files at the same time.
      # See https://github.com/mgechev/revive#command-line-flags
      # Defaults to unlimited.
      max-open-files: 2048

      # Sets the default severity.
      # See https://github.com/mgechev/revive#configuration
      # Default: warning
      #severity: error

      # Enable all available rules. Except those disabled explicitly below.
      # Default: false
      enable-all-rules: true

      # Enable validation of comment directives.
      # See https://github.com/mgechev/revive#comment-directives
      directives:
        - name: specify-disable-reason
          severity: error

      # Sets the default failure confidence.
      # This means that linting errors with less than 0.8 confidence will be ignored.
      # Default: 0.8
      #confidence: 0.1
      # Run `GL_DEBUG=revive golangci-lint run --enable-only=revive` to see default, all available rules, and enabled rules.
      rules:
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#add-constant
        - name: add-constant
          #severity: warning
          #disabled: false
          #exclude: [""]
          arguments:
            - maxLitCount: "3"
              allowStrs: '""'
              allowInts: "0,1,2,10" #AaronS for strconv.FormatInt() passing 10 is idomatic go.
              allowFloats: "0.0,0.,1.0,1.,2.0,2."
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#argument-limit
        - name: argument-limit
          # severity: warning
          # disabled: false
          # exclude: [""]
          arguments: [ 5 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#atomic
        # - name: atomic
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#banned-characters
        # - name: banned-characters
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments: [ "Ω","Σ","σ", "7" ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#bare-return
        # - name: bare-return
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#blank-imports
        # - name: blank-imports
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#bool-literal-in-expr
        # - name: bool-literal-in-expr
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#call-to-gc
        # - name: call-to-gc
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#cognitive-complexity
        - name: cognitive-complexity
          # severity: warning
          # disabled: false
          # exclude: [""]
          arguments: [ 7 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#comment-spacings
        # - name: comment-spacings
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - mypragma
        #     - otherpragma
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#comments-density
        # - name: comments-density
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments: [ 15 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#confusing-naming
        # - name: confusing-naming
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#confusing-results
        # - name: confusing-results
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#constant-logical-expr
        # - name: constant-logical-expr
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#context-as-argument
        # - name: context-as-argument
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - allowTypesBefore: "*testing.T,*github.com/user/repo/testing.Harness"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#context-keys-type
        # - name: context-keys-type
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#cyclomatic
        - name: cyclomatic
          # severity: warning
          # disabled: false
          # exclude: [""]
          arguments: [ 10 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#datarace
        # - name: datarace
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#deep-exit
        # - name: deep-exit
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#defer
        # - name: defer
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "call-chain"
        #     - "loop"
        #     - "method-call"
        #     - "recover"
        #     - "immediate-recover"
        #     - "return"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#dot-imports
        # - name: dot-imports
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - allowedPackages: ["github.com/onsi/ginkgo/v2", "github.com/onsi/gomega"]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#duplicated-imports
        # - name: duplicated-imports
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#early-return
        # - name: early-return
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "preserveScope"
        #     - "allowJump"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#empty-block
        # - name: empty-block
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#empty-lines
        # - name: empty-lines
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#enforce-map-style
        # - name: enforce-map-style
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "make"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#enforce-repeated-arg-type-style
        # - name: enforce-repeated-arg-type-style
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "short"
        #     # Or this parameter:
        #     - funcArgStyle: "full"
        #       funcRetValStyle: "short"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#enforce-slice-style
        # - name: enforce-slice-style
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "make"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#error-naming
        # - name: error-naming
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#error-return
        # - name: error-return
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#error-strings
        # - name: error-strings
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "xerrors.New"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#errorf
        # - name: errorf
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#exported
        # - name: exported
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "checkPrivateReceivers"
        #     - "disableStutteringCheck"
        #     - "sayRepetitiveInsteadOfStutters"
        #     - "checkPublicInterface"
        #     - "disableChecksOnConstants"
        #     - "disableChecksOnFunctions"
        #     - "disableChecksOnMethods"
        #     - "disableChecksOnTypes"
        #     - "disableChecksOnVariables"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#file-header
        # - name: file-header
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - This is the text that must appear at the top of source files.
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#file-length-limit
        # - name: file-length-limit
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - max: 100
        #       skipComments: true
        #       skipBlankLines: true
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#filename-format
        # - name: filename-format
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "^[_a-z][_a-z0-9]*\\.go$"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#flag-parameter
        # - name: flag-parameter
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#function-length
        # - name: function-length
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments: [ 10, 0 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#function-result-limit
        - name: function-result-limit
          # severity: warning
          # disabled: false
          # exclude: [""]
          arguments: [ 3 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#get-return
        # - name: get-return
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#identical-branches
        # - name: identical-branches
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#if-return
        # - name: if-return
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#import-alias-naming
        # - name: import-alias-naming
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "^[a-z][a-z0-9]{0,}$"
        #     # Or this parameter:
        #     - allowRegex: "^[a-z][a-z0-9]{0,}$"
        #       denyRegex: '^v\d+$'
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#import-shadowing
        # - name: import-shadowing
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#imports-blocklist
        # - name: imports-blocklist
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "crypto/md5"
        #     - "crypto/sha1"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#increment-decrement
        # - name: increment-decrement
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#indent-error-flow
        # - name: indent-error-flow
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "preserveScope"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#line-length-limit
        - name: line-length-limit
          # severity: warning
          disabled: true # Aaron - handled by golines. which is a formatter and will fix long lines.
          # exclude: [""]
          # arguments: [ 120 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#max-control-nesting
        # - name: max-control-nesting
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments: [ 3 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#max-public-structs
        # - name: max-public-structs
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments: [ 3 ]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#modifies-parameter
        # - name: modifies-parameter
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#modifies-value-receiver
        # - name: modifies-value-receiver
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#nested-structs
        # - name: nested-structs
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#optimize-operands-order
        # - name: optimize-operands-order
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#package-comments
        # - name: package-comments
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#range
        # - name: range
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#range-val-address
        # - name: range-val-address
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#range-val-in-closure
        # - name: range-val-in-closure
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#receiver-naming
        # - name: receiver-naming
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - maxLength: 2
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#redefines-builtin-id
        # - name: redefines-builtin-id
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#redundant-build-tag
        # - name: redundant-build-tag
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#redundant-import-alias
        # - name: redundant-import-alias
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#string-format
        # - name: string-format
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - - 'core.WriteError[1].Message'
        #       - '/^([^A-Z]|$)/'
        #       - must not start with a capital letter
        #     - - 'fmt.Errorf[0]'
        #       - '/(^|[^\.!?])$/'
        #       - must not end in punctuation
        #     - - panic
        #       - '/^[^\n]*$/'
        #       - must not contain line breaks
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#string-of-int
        # - name: string-of-int
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#struct-tag
        # - name: struct-tag
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "json,inline"
        #     - "bson,outline,gnu"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#superfluous-else
        # - name: superfluous-else
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "preserveScope"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#time-equal
        # - name: time-equal
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#time-naming
        # - name: time-naming
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unchecked-type-assertion
        # - name: unchecked-type-assertion
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - acceptIgnoredAssertionResult: true
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unconditional-recursion
        # - name: unconditional-recursion
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unexported-naming
        # - name: unexported-naming
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unexported-return
        # - name: unexported-return
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unhandled-error
        # - name: unhandled-error
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - "fmt.Printf"
        #     - "myFunction"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unnecessary-stmt
        # - name: unnecessary-stmt
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unreachable-code
        # - name: unreachable-code
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unused-parameter
        # - name: unused-parameter
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - allowRegex: "^_"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#unused-receiver
        # - name: unused-receiver
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - allowRegex: "^_"
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#use-any
        # - name: use-any
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#use-errors-new
        # - name: use-errors-new
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#useless-break
        # - name: useless-break
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#var-declaration
        # - name: var-declaration
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#var-naming
        # - name: var-naming
        #   severity: warning
        #   disabled: false
        #   exclude: [""]
        #   arguments:
        #     - [ "ID" ] # AllowList
        #     - [ "VM" ] # DenyList
        #     - - upperCaseConst: true # Extra parameter (upperCaseConst|skipPackageNameChecks)
        # # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#waitgroup-by-value
        # - name: waitgroup-by-value
        #   severity: warning
        #   disabled: false
        #   exclude: [""]


    # rowserrcheck:
    #   # database/sql is always checked
    #   # Default: []
    #   packages:
    #     - github.com/jmoiron/sqlx

    # sloglint:
    #   # Enforce not using global loggers.
    #   # Values:
    #   # - "": disabled
    #   # - "all": report all global loggers
    #   # - "default": report only the default slog logger
    #   # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-global
    #   # Default: ""
    #   no-global: all
    #   # Enforce using methods that accept a context.
    #   # Values:
    #   # - "": disabled
    #   # - "all": report all contextless calls
    #   # - "scope": report only if a context exists in the scope of the outermost function
    #   # https://github.com/go-simpler/sloglint?tab=readme-ov-file#context-only
    #   # Default: ""
    #   context: scope

    staticcheck:
      # SAxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks
      # Example (to disable some checks): [ "all", "-SA1000", "-SA1001"]
      # Default: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
      checks:
        - all
        # Incorrect or missing package comment.
        # https://staticcheck.dev/docs/checks/#ST1000
        #- -ST1000
        # Use consistent method receiver names.
        # https://staticcheck.dev/docs/checks/#ST1016
        #- -ST1016
        # Omit embedded fields from selector expression.
        # https://staticcheck.dev/docs/checks/#QF1008
        #- -QF1008
    unused:
      # Mark all struct fields that have been written to as used.
      # Default: true
      #field-writes-are-uses: false
      # Treat IncDec statement (e.g. `i++` or `i--`) as both read and write operation instead of just write.
      # Default: false
      #post-statements-are-reads: true
      # Mark all exported fields as used.
      # default: true
      #exported-fields-are-used: false
      # Mark all function parameters as used.
      # default: true
      #parameters-are-used: false
      # Mark all local variables as used.
      # default: true
      local-variables-are-used: false
      # Mark all identifiers inside generated files as used.
      # Default: true
      #generated-is-used: false
    # usetesting:
    #   # Enable/disable `os.TempDir()` detections.
    #   # Default: false
    #   os-temp-dir: true

  # exclusions:
  #   # Log a warning if an exclusion rule is unused.
  #   # Default: false
  #   warn-unused: true
  #   # Predefined exclusion rules.
  #   # Default: []
  #   presets:
  #     - std-error-handling
  #     - common-false-positives
  #   # Excluding configuration per-path, per-linter, per-text and per-source.
  #   rules:
  #     - source: 'TODO'
  #       linters: [ godot ]
  #     - text: 'should have a package comment'
  #       linters: [ revive ]
  #     - text: 'exported \S+ \S+ should have comment( \(or a comment on this block\))? or be unexported'
  #       linters: [ revive ]
  #     - text: 'package comment should be of the form ".+"'
  #       source: '// ?(nolint|TODO)'
  #       linters: [ revive ]
  #     - text: 'comment on exported \S+ \S+ should be of the form ".+"'
  #       source: '// ?(nolint|TODO)'
  #       linters: [ revive, staticcheck ]
  #     - path: '_test\.go'
  #       linters:
  #         - bodyclose
  #         - dupl
  #         - errcheck
  #         - funlen
  #         - goconst
  #         - gosec
  #         - noctx
  #         - wrapcheck




